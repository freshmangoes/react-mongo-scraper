{"version":3,"sources":["Components/ArticleBox/ArticleBox.js","utils/API.js","Components/Scraper/Scraper.js","App.js","index.js"],"names":["ArticleBox","props","headline","summary","link","imgSrc","timestamp","date","Date","toUTCString","Card","className","Img","variant","src","width","height","loading","Body","Title","Text","Button","href","Footer","axios","get","Scraper","useState","state","setState","getFromDb","a","API","response","data","console","log","scrapeArticles","useEffect","Container","fluid","Row","Col","size","onClick","map","article","App","ReactDOM","render","document","getElementById"],"mappings":"oSAsCeA,EAjCI,SAACC,GAAW,IACtBC,EAA+CD,EAA/CC,SAAUC,EAAqCF,EAArCE,QAASC,EAA4BH,EAA5BG,KAAMC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,UACnCC,EAAO,IAAIC,KAAKF,GAAWG,cAEjC,OACC,6BACC,kBAACC,EAAA,EAAD,CAAMC,UAAU,iBACf,kBAACD,EAAA,EAAKE,IAAN,CACCC,QAAQ,MACRC,IAAKT,EACLU,MAAM,MACNC,OAAO,MACPC,QAAQ,SAET,kBAACP,EAAA,EAAKQ,KAAN,KACC,kBAACR,EAAA,EAAKS,MAAN,KAAajB,GACb,kBAACQ,EAAA,EAAKU,KAAN,KAAYjB,GACZ,kBAACkB,EAAA,EAAD,CAAQR,QAAQ,gBACf,uBAAGS,KAAMlB,GAAT,oBAED,kBAACM,EAAA,EAAKa,OAAN,CAAaZ,UAAU,QAAvB,qBAAiDJ,O,iBCrBvC,EACN,WACP,OAAOiB,IAAMC,IAAI,YAFJ,EAKF,WACX,OAAOD,IAAMC,IAAI,gB,wBCyEJC,EA1EC,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAGfC,EAAS,uCAAG,4BAAAC,EAAA,+EAGOC,IAHP,OAGVC,EAHU,OAKhBJ,EAAS,YAAII,EAASC,OALN,gDAOhBC,QAAQC,IAAI,uBACZD,QAAQC,IAAR,MARgB,yDAAH,qDAYTC,EAAc,uCAAG,sBAAAN,EAAA,sEAGrBI,QAAQC,IAAI,gCAHS,SAKfJ,IALe,cAQrBG,QAAQC,IAAI,WACZD,QAAQC,IAAI,qCATS,SAWfN,IAXe,OAcrBK,QAAQC,IAAI,WAdS,kDAgBrBD,QAAQC,IAAI,2BACZD,QAAQC,IAAR,MAjBqB,0DAAH,qDAyBpB,OAJAE,qBAAU,WACTR,MACE,IAGF,kBAACS,EAAA,EAAD,CAAWC,MAAM,MAChB,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACrB,EAAA,EAAD,CACCR,QAAQ,kBACR8B,KAAK,KACLhC,UAAU,MACViC,QAAS,kBAAMP,MAEf,0DAKH,kBAACI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACEd,EAAMiB,KAAI,SAACC,GACX,OACC,kBAAC,EAAD,CACC5C,SAAU4C,EAAQ5C,SAClBC,QAAS2C,EAAQ3C,QACjBC,KAAM0C,EAAQ1C,KACdC,OAAQyC,EAAQzC,OAChBC,UAAWwC,EAAQxC,mBC1DZyC,MARf,WACC,OACC,yBAAKpC,UAAU,OACd,kBAAC,EAAD,QCLHqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0b2ee7ab.chunk.js","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n// import Moment from 'react-moment';\n\nconst ArticleBox = (props) => {\n\tconst { headline, summary, link, imgSrc, timestamp } = props;\n\tconst date = new Date(timestamp).toUTCString();\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className=\"m-3 text-left\">\n\t\t\t\t<Card.Img\n\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\tsrc={imgSrc}\n\t\t\t\t\twidth=\"50%\"\n\t\t\t\t\theight=\"50%\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t/>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>{headline}</Card.Title>\n\t\t\t\t\t<Card.Text>{summary}</Card.Text>\n\t\t\t\t\t<Button variant=\"outline-info\">\n\t\t\t\t\t\t<a href={link}>Link to article</a>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Card.Footer className=\"mt-2\">Date added to db: {date}</Card.Footer>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t{/* <h2>{headline}</h2>\n\t\t\t<p>{summary}</p>\n\t\t\t<p>\n\t\t\t\t<a href={link}>Link to article</a>\n\t\t\t</p>\n\t\t\t<img src={imgSrc} loading=\"lazy\" width=\"50%\" height=\"50%\" /> */}\n\t\t</div>\n\t);\n};\n\nexport default ArticleBox;\n","// connect api endpoints here\n\nimport axios from 'axios';\n\nexport default {\n\tscrape: function () {\n\t\treturn axios.get('/scrape');\n\t},\n\n\tdbArticles: function () {\n\t\treturn axios.get('/dbArticles');\n\t},\n};\n","import React, { useState, useEffect } from 'react';\nimport ArticleBox from '../ArticleBox/ArticleBox';\nimport API from '../../utils/API';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nconst Scraper = () => {\n\tconst [state, setState] = useState([]);\n\n\tconst getFromDb = async () => {\n\t\ttry {\n\t\t\t// gets response from API endpoint '/scrape/\n\t\t\tconst response = await API.dbArticles();\n\t\t\t// sets state to response\n\t\t\tsetState([...response.data]);\n\t\t} catch (err) {\n\t\t\tconsole.log('error in Scraper.js');\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tconst scrapeArticles = async () => {\n\t\ttry {\n\t\t\t// Debug\n\t\t\tconsole.log('Scraping for new articles...');\n\n\t\t\tawait API.scrape();\n\n\t\t\t// Debug\n\t\t\tconsole.log('Done :)');\n\t\t\tconsole.log('Getting articles from database...');\n\n\t\t\tawait getFromDb();\n\n\t\t\t// Debug\n\t\t\tconsole.log('Done :)');\n\t\t} catch (err) {\n\t\t\tconsole.log('Error scraping articles');\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetFromDb();\n\t}, []);\n\n\treturn (\n\t\t<Container fluid=\"md\">\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-primary\"\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tclassName=\"m-3\"\n\t\t\t\t\t\tonClick={() => scrapeArticles()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1>Scrape for New Articles</h1>\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{/* maps through array */}\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t{state.map((article) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ArticleBox\n\t\t\t\t\t\t\t\theadline={article.headline}\n\t\t\t\t\t\t\t\tsummary={article.summary}\n\t\t\t\t\t\t\t\tlink={article.link}\n\t\t\t\t\t\t\t\timgSrc={article.imgSrc}\n\t\t\t\t\t\t\t\ttimestamp={article.timestamp}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default Scraper;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './Components/Scraper/Scraper';\nimport Scraper from './Components/Scraper/Scraper';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Scraper />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}